[respond]
[filament_switch_sensor filament_sensor]
pause_on_runout: False
# How do we know this is right pin? Also might have to be !PE15
switch_pin: PE15
insert_gcode:
  RESPOND MSG="Filament insert detected"
runout_gcode:
  # This is where we insert gcode to handle the runout.
  RESPOND MSG="Filament runout detected"
M25 ; Pause print

# These commands were suggested to us by server, but why exactly?
G92 E0 ; Reset extruder
G1 E-5 F300 ; Retract filament 5mm

# Does T1 switch agnostically between both extruders?
T1 ; Switch to the next extruder

G1 E5 F100 ; Prime the new extruder
G92 E0 ; Reset extruder
M24 ; Resume print

[filament_switch_sensor my_sensor]
#pause_on_runout: True
#   When set to True, a PAUSE will execute immediately after a runout
#   is detected. Note that if pause_on_runout is False and the
#   runout_gcode is omitted then runout detection is disabled. Default
#   is True.
#runout_gcode:
#   A list of G-Code commands to execute after a filament runout is
#   detected. See docs/Command_Templates.md for G-Code format. If
#   pause_on_runout is set to True this G-Code will run after the
#   PAUSE is complete. The default is not to run any G-Code commands.
#insert_gcode:
#   A list of G-Code commands to execute after a filament insert is
#   detected. See docs/Command_Templates.md for G-Code format. The
#   default is not to run any G-Code commands, which disables insert
#   detection.
#event_delay: 3.0
#   The minimum amount of time in seconds to delay between events.
#   Events triggered during this time period will be silently
#   ignored. The default is 3 seconds.
#pause_delay: 0.5
#   The amount of time to delay, in seconds, between the pause command
#   dispatch and execution of the runout_gcode. It may be useful to
#   increase this delay if OctoPrint exhibits strange pause behavior.
#   Default is 0.5 seconds.
#switch_pin:
#   The pin on which the switch is connected. This parameter must be
#   provided.


SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1 ; enable
SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0 ; disable

[filament_motion_sensor btt_smartie]
detection_length: 7.0
extruder: extruder
switch_pin: !PC15
runout_gcode: FILAMENT_RUNOUT

[gcode_macro FILAMENT_RUNOUT]
gcode:
    M600

[gcode_macro M600]
gcode: guide user to filament change by cooling, moving extruder to back etc.


#
[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    # Parameters
    {% set z = params.Z|default(10)|int %}                                                   # z hop amount

    {% if printer['pause_resume'].is_paused|int == 0 %}
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                              # set z hop variable for reference in resume macro
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}    # set hotend temp variable for reference in resume macro

        SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0                                  # disable filament sensor
        SAVE_GCODE_STATE NAME=PAUSE                                                          # save current print position for resume
        BASE_PAUSE                                                                           # pause print
        {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}       # check that zhop doesn't exceed z max
            G91                                                                              # relative positioning
            G1 Z{z} F900                                                                     # raise Z up by z hop amount
        {% else %}
            { action_respond_info("Pause zhop exceeds maximum Z height.") }                  # if z max is exceeded, show message and set zhop value for resume to 0
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
        {% endif %}
        G90                                                                                  # absolute positioning
        G1 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} F6000   # park toolhead at front center
        SAVE_GCODE_STATE NAME=PAUSEPARK                                                      # save parked position in case toolhead is moved during the pause (otherwise the return zhop can error)
        M104 S0                                                                              # turn off hotend
        SET_IDLE_TIMEOUT TIMEOUT=43200                                                       # set timeout to 12 hours
    {% endif %}


